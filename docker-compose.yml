networks:
  tailormap-viewer:
    name: tailormap-snapshot_default
    external: true
  traefik:
    name: traefik
    external: true
  tailormap-monitoring:
    name: tailormap-monitoring


volumes:
  prometheus-data:
  grafana-data:


services:
  prometheus:
    container_name: prometheus
    image: ghcr.io/b3partners/tailormap-monitoring_prometheus:snapshot
    build:
      context: prometheus
    command: >
      --config.file=/etc/prometheus/prometheus.yml
      --log.level=debug
    networks: # add the traefik and tailormap-data networks to scrape Traefik and Solr metrics
      - tailormap-monitoring
      - tailormap-viewer
      - traefik
    volumes:
      - prometheus-data:/prometheus
    labels:
      traefik.enable: false
    restart: unless-stopped

  grafana:
    container_name: grafana
    image: ghcr.io/b3partners/tailormap-monitoring_grafana:snapshot
    build:
      context: grafana
      # args:
      # optional image renderer
      # GF_INSTALL_IMAGE_RENDERER_PLUGIN: true
    networks:
      - tailormap-monitoring
      - traefik
    volumes:
      - grafana-data:/var/lib/grafana
    environment:
      GF_SECURITY_ADMIN_USER: "admin"
      GF_SECURITY_ADMIN_PASSWORD: ${GF_SECURITY_ADMIN_PASSWORD:-admin}
      GF_SECURITY_COOKIE_SECURE: "true"
      GF_SERVER_ROOT_URL: "%(protocol)s://%(domain)s:%(http_port)s/grafana/"
      GF_SERVER_DOMAIN: ${GF_SERVER_DOMAIN:-snapshot.tailormap.nl}
      GF_SERVER_SERVE_FROM_SUB_PATH: "true"
      # install these plugins
      GF_INSTALL_PLUGINS: "grafana-clock-panel,grafana-piechart-panel"
      # TODO email setup
      #  GF_SMTP_ENABLED: "true"
      #  GF_SMTP_HOST: "smtp.gmail.com:587"
      #  GF_SMTP_USER: "myadrress@gmail.com"
      #  GF_SMTP_PASSWORD: "mypassword"
      #  GF_SMTP_FROM_ADDRESS: "myaddress@gmail.com"
    labels:
      traefik.enable: true
      traefik.docker.network: traefik
      traefik.http.routers.tailormap-monitoring.rule: "Host(`${HOST:-snapshot.tailormap.nl}`) && PathPrefix(`/grafana`)"
      traefik.http.routers.tailormap-monitoring.tls: "true"
      traefik.http.routers.tailormap-monitoring.tls.certresolver: "letsencrypt"
      traefik.http.services.tailormap-monitoring.loadbalancer.server.port: "3000"
    restart: unless-stopped
